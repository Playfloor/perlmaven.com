=title Manipulando arrays em Perl: shift, unshift, push, pop
=timestamp 2014-09-26T14:45:55
=indexes array, shift, unshift, push, pop
=status show
=original manipulating-perl-arrays
=books beginner
=author szabgab
=translator aramisf
=comments_disqus_enable 0

=abstract start

Assim como acessar elementos individuais de um array, o Perl
também provê diversos outros meios de lidar com os mesmos. Em particular,
existem funções que tornam muito fácil o uso dos arrays do Perl como pilhas ou
filas.

=abstract end

<h2>pop</h2>

A função <hl>pop</hl> remove e retorna o último elemento de um array.

Neste primeiro exemplo, você pode ver como, dado um array de 3 elementos, a
função <hl>pop</hl> remove o último elemento (aquele que possui maior índice)
e o retorna.

<code lang="perl">
my @names = ('Foo', 'Bar', 'Baz');
my $last_one = pop @names;

print "$last_one\n";  # Baz
print "@names\n";     # Foo Bar
</code>

No caso especial do array original ser vazio, a função <hl>pop</hl> retornará
<a href="/undef-e-definido-em-perl">undef</a>.

<h2>push</h2>

A função <hl>push</hl> pode adicionar um ou mais valores ao final do array.
(Bem, ela também pode adicionar 0 valor, mas isto não é lá muito útil, é?)

<code lang="perl">
my @names = ('Foo', 'Bar');
push @names, 'Moo';
print "@names\n";     # Foo Bar Moo

my @others = ('Darth', 'Vader');
push @names, @others;
print "@names\n";     # Foo Bar Moo Darth Vader
</code>

Neste exemplo começamos com um array com dois elementos.
Então empilhamos um único valor escalar no final do nosso array e ele acaba
sendo extendido para um array de 3 elementos.

Na segunda chamada para <hl>push</hl>, nós empilhamos o conteúdo do array
<hl>others</hl> no final do array <hl>@names</hl>, extendendo-o para um array
de 5 elementos.

<h2>shift</h2>

A função <hl>shift</hl> move todo o array uma posição para a esquerda.
Considerando que o início do array está no lado esquerdo. O elemento que
estava no início do array vai "cair" fora do array e se tornar o valor
retornado pela função. (Se o array for vazio, <b>shift</b> retornará <a
href="/undef-e-definido-em-perl">undef</a>.)

Depois da operação, o array ficará um elemento menor.

<code lang="perl">
my @names = ('Foo', 'Bar', 'Moo');
my $first = shift @names;
print "$first\n";     # Foo
print "@names\n";     # Bar Moo
</code>

Isto é muito parecido com o <hl>pop</hl>, mas funciona na ponta de menor
índice.

<h2>unshift</h2>

É a operação contrária ao <hl>shift</hl>. <hl>unshift</hl> vai tomar um ou
mais valores (ou 0, se você preferir) e coloca-lo no início do array, movendo
todos os outros elementos para a direita.

Você pode passar a ele um único valor escalar, e então este valor passará a
ser o primeiro elemento do array. Ou, como no segundo exemplo, você pode
passar um segundo array e então os elementos deste segundo array
(<hl>@others</hl> no nosso caso) será copiado no início do array principal
(<hl>@names</hl> no nosso caso) movendo os outros elementos para índices
maiores.

<code lang="perl">
my @names = ('Foo', 'Bar');
unshift @names, 'Moo';
print "@names\n";     # Moo Foo Bar

my @others = ('Darth', 'Vader');
unshift @names, @others;
print "@names\n";     # Darth Vader Moo Foo Bar
</code>

